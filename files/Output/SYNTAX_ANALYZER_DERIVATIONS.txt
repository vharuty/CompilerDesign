Stack: prog $ 
Received token: program
Rule: prog -> classDecl_list progBody put_end_program_marker validate_undefineds 
Stack: classDecl_list progBody put_end_program_marker validate_undefineds $ 
Rule: classDecl_list -> EPSILON 
Rule: progBody -> program generate_program_marker C C2 D2 funcBody ; jump_end_program_marker funcDef_list 
Stack: program generate_program_marker C C2 D2 funcBody ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: generate_program_marker C C2 D2 funcBody ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: {
Rule: funcBody -> { D funcBody_ } D_ D_2 
Stack: { D funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: D funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: result
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_1
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_2
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_3
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_4
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: for
Rule: funcBody_ -> restOfStatment statement_list 
Stack: restOfStatment statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: restOfStatment -> for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack 
Stack: for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: (
Stack: type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: int
Rule: type -> typeNumeric 
Stack: typeNumeric id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: typeNumeric -> int 
Stack: int id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Stack: V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: assignOp -> = validateType 
Stack: = validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 0
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: relExpr -> arithExpr relOp arithExpr validate_relType 
Stack: arithExpr relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: <
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: relOp -> < create_operation 
Stack: < create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: assignStat -> variable_ assignOp expr 
Stack: variable_ assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: )
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: {
Rule: statBlock -> { statement_list } 
Stack: { statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_1
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: for
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: statement -> restOfStatment 
Stack: restOfStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: restOfStatment -> for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack 
Stack: for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: (
Stack: type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: int
Rule: type -> typeNumeric 
Stack: typeNumeric id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: typeNumeric -> int 
Stack: int id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Stack: V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: assignOp -> = validateType 
Stack: = validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 0
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: relExpr -> arithExpr relOp arithExpr validate_relType 
Stack: arithExpr relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: <
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: relOp -> < create_operation 
Stack: < create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: assignStat -> variable_ assignOp expr 
Stack: variable_ assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: )
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: {
Rule: statBlock -> { statement_list } 
Stack: { statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_2
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: for
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: statement -> restOfStatment 
Stack: restOfStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: restOfStatment -> for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack 
Stack: for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: (
Stack: type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: int
Rule: type -> typeNumeric 
Stack: typeNumeric id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: typeNumeric -> int 
Stack: int id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Stack: V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: assignOp -> = validateType 
Stack: = validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 0
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Rule: relExpr -> arithExpr relOp arithExpr validate_relType 
Stack: arithExpr relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: <
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: relOp -> < create_operation 
Stack: < create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Rule: assignStat -> variable_ assignOp expr 
Stack: variable_ assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: )
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: {
Rule: statBlock -> { statement_list } 
Stack: { statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_3
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: for
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: statement -> restOfStatment 
Stack: restOfStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: restOfStatment -> for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack 
Stack: for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: (
Stack: type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: int
Rule: type -> typeNumeric 
Stack: typeNumeric id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: typeNumeric -> int 
Stack: int id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: l
Stack: V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: assignOp -> = validateType 
Stack: = validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 0
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: l
Rule: relExpr -> arithExpr relOp arithExpr validate_relType 
Stack: arithExpr relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: <
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: relOp -> < create_operation 
Stack: < create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 4
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: l
Rule: assignStat -> variable_ assignOp expr 
Stack: variable_ assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: l
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: )
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_4
Rule: statBlock -> statement 
Stack: statement jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: l
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: l
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Stack: mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: }
Rule: statement_list -> EPSILON 
Stack: jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Stack: mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: }
Rule: statement_list -> EPSILON 
Stack: jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Stack: mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: }
Rule: statement_list -> EPSILON 
Stack: jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Stack: mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: result
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: validateType expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_4
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 0
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 3
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: l
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_3
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: k
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: array_1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: 1
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: insert_factor_ term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: put
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: statement -> restOfStatment 
Stack: restOfStatment statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: restOfStatment -> put ( expr validate_put ) ; 
Stack: put ( expr validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: ( expr validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: (
Stack: expr validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: result
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: )
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Stack: statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: }
Rule: statement_list -> EPSILON 
Stack: D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Received token: ;
Stack: jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ 
Stack: prog $ $ 
Received token: program
Rule: prog -> classDecl_list progBody put_end_program_marker validate_undefineds 
Stack: classDecl_list progBody put_end_program_marker validate_undefineds $ $ 
Rule: classDecl_list -> EPSILON 
Rule: progBody -> program generate_program_marker C C2 D2 funcBody ; jump_end_program_marker funcDef_list 
Stack: program generate_program_marker C C2 D2 funcBody ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: generate_program_marker C C2 D2 funcBody ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: {
Rule: funcBody -> { D funcBody_ } D_ D_2 
Stack: { D funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: D funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: result
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_1
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_2
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_3
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: int
Rule: funcBody_ -> typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ 
Stack: typeNumeric id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: typeNumeric -> int 
Stack: int id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: id V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_4
Stack: V V2 arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: arraySize_list -> arraySize arraySize_list 
Stack: arraySize arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arraySize -> [ intValue ] DIM 
Stack: [ intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: intValue ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Stack: ] DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Stack: DIM arraySize_list ; IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: arraySize_list -> EPSILON 
Stack: IV IV2 funcBody_ } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: for
Rule: funcBody_ -> restOfStatment statement_list 
Stack: restOfStatment statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: restOfStatment -> for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack 
Stack: for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: (
Stack: type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: int
Rule: type -> typeNumeric 
Stack: typeNumeric id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: typeNumeric -> int 
Stack: int id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Stack: V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: assignOp -> = validateType 
Stack: = validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 0
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: relExpr -> arithExpr relOp arithExpr validate_relType 
Stack: arithExpr relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: <
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: relOp -> < create_operation 
Stack: < create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: assignStat -> variable_ assignOp expr 
Stack: variable_ assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: )
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: {
Rule: statBlock -> { statement_list } 
Stack: { statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_1
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: for
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: statement -> restOfStatment 
Stack: restOfStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: restOfStatment -> for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack 
Stack: for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: (
Stack: type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: int
Rule: type -> typeNumeric 
Stack: typeNumeric id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: typeNumeric -> int 
Stack: int id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Stack: V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: assignOp -> = validateType 
Stack: = validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 0
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: relExpr -> arithExpr relOp arithExpr validate_relType 
Stack: arithExpr relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: <
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: relOp -> < create_operation 
Stack: < create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: assignStat -> variable_ assignOp expr 
Stack: variable_ assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: )
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: {
Rule: statBlock -> { statement_list } 
Stack: { statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_2
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: for
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: statement -> restOfStatment 
Stack: restOfStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: restOfStatment -> for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack 
Stack: for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: (
Stack: type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: int
Rule: type -> typeNumeric 
Stack: typeNumeric id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: typeNumeric -> int 
Stack: int id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Stack: V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: assignOp -> = validateType 
Stack: = validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 0
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Rule: relExpr -> arithExpr relOp arithExpr validate_relType 
Stack: arithExpr relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: <
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: relOp -> < create_operation 
Stack: < create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Rule: assignStat -> variable_ assignOp expr 
Stack: variable_ assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: )
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: {
Rule: statBlock -> { statement_list } 
Stack: { statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_3
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType expr ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: for
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: statement -> restOfStatment 
Stack: restOfStatment statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: restOfStatment -> for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack 
Stack: for ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: ( type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: (
Stack: type id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: int
Rule: type -> typeNumeric 
Stack: typeNumeric id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: typeNumeric -> int 
Stack: int id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: id V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: l
Stack: V_for assignOp IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: assignOp -> = validateType 
Stack: = validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType IV_for expr Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 0
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ exp_ Validate_assign_type process_assignOp ; generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: generate_FOR_marker generate_END_FOR_marker relExpr ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: l
Rule: relExpr -> arithExpr relOp arithExpr validate_relType 
Stack: arithExpr relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ relOp arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: <
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: relOp -> < create_operation 
Stack: < create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation arithExpr validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 4
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ validate_relType ; assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: assignStat ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: l
Rule: assignStat -> variable_ assignOp expr 
Stack: variable_ assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType expr ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: l
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ exp_ ) Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: )
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type Save_assignOp statBlock jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_4
Rule: statBlock -> statement 
Stack: statement jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: l
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType expr ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: l
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Stack: mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: }
Rule: statement_list -> EPSILON 
Stack: jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Stack: mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: }
Rule: statement_list -> EPSILON 
Stack: jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Stack: mark_END_FOR POP_jump_marker_stack statement_list } jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: }
Rule: statement_list -> EPSILON 
Stack: jump_FOR ; mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Stack: mark_END_FOR POP_jump_marker_stack statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: result
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: statement -> assignmentStatment 
Stack: assignmentStatment statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: assignmentStatment -> variable_ assignOp expr ; Validate_assign_type process_assignOp 
Stack: variable_ assignOp expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset assignOp expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: =
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: assignOp -> = validateType 
Stack: = validateType expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: validateType expr ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_4
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 0
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 3
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: l
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_3
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: k
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: i
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: j
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: -
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> - create_operation 
Stack: - create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 2
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ ass_arithExp_2I arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: +
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> addOp term ass_arithExp_2I arithExpr_ 
Stack: addOp term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: addOp -> + create_operation 
Stack: + create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: create_operation term ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: array_1
Rule: term -> factor term_ 
Stack: factor term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: [
Rule: indice_list -> indice indice_list 
Stack: indice indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: indice -> [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM 
Stack: [ insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_expression_int arithExpr Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: 1
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> intValue insert_factor_ 
Stack: intValue insert_factor_ term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: insert_factor_ term_ arithExpr_ Validate_dimention_type ] Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ]
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Stack: Validate_DIM indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ ass_arithExp_2I arithExpr_ exp_ ; Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: Validate_assign_type process_assignOp statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: put
Rule: statement_list -> statement statement_list 
Stack: statement statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: statement -> restOfStatment 
Stack: restOfStatment statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: restOfStatment -> put ( expr validate_put ) ; 
Stack: put ( expr validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: ( expr validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: (
Stack: expr validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: result
Rule: expr -> arithExpr exp_ 
Stack: arithExpr exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: arithExpr -> term arithExpr_ 
Stack: term arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: term -> factor term_ 
Stack: factor term_ arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: factor -> variable_ factor_ IS_Function insert_factor_var 
Stack: variable_ factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Rule: variable_ -> id Validate indice_list idnest_list_ check_Dim_Count compute_offset 
Stack: id Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Stack: Validate indice_list idnest_list_ check_Dim_Count compute_offset factor_ IS_Function insert_factor_var term_ arithExpr_ exp_ validate_put ) ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: )
Rule: indice_list -> EPSILON 
Rule: idnest_list_ -> EPSILON 
Rule: factor_ -> EPSILON 
Rule: term_ -> EPSILON ass_term_S 
Rule: arithExpr_ -> EPSILON ass_arithExp_S 
Rule: exp_ -> EPSILON 
Stack: ; statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Stack: statement_list } D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: }
Rule: statement_list -> EPSILON 
Stack: D_ D_2 ; jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
Received token: ;
Stack: jump_end_program_marker funcDef_list put_end_program_marker validate_undefineds $ $ 
